{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./app/global/global.module.js","webpack:///./app/util/util.js","webpack:///./app/global/dialog.service.js","webpack:///./app/main/main.module.js","webpack:///./app/main/app.component.js","webpack:///./app/main/welcome.component.js","webpack:///./app/main/login.component.js","webpack:///./app/main/home.component.js","webpack:///./app/contacts/contacts.module.js","webpack:///./app/mymessages/mymessages.module.js","webpack:///./app/prefs/prefs.module.js","webpack:///./app/bootstrap/bootstrap.js","webpack:///./app/global/appConfig.service.js","webpack:///./app/global/auth.service.js","webpack:///./app/global/dataSources.service.js","webpack:///./app/util/sessionStorage.js","webpack:///./app/global/dialog.directive.js","webpack:///./app/global/loadingIndicator.service.js","webpack:///./app/global/requiresAuth.hook.js","webpack:///./app/global/loadingIndicator.hook.js","webpack:///./app/main/app.states.js","webpack:///./app/contacts/contactDetail.component.js","webpack:///./app/contacts/contactList.component.js","webpack:///./app/contacts/contacts.component.js","webpack:///./app/contacts/contactView.component.js","webpack:///./app/contacts/editContact.component.js","webpack:///./app/contacts/contacts.states.js","webpack:///./app/mymessages/compose.component.js","webpack:///./app/mymessages/directives/folderList.component.js","webpack:///./app/mymessages/message.component.js","webpack:///./app/mymessages/messageList.component.js","webpack:///./app/mymessages/mymessages.component.js","webpack:///./app/mymessages/directives/messageTable.component.js","webpack:///./app/mymessages/directives/sortMessages.directive.js","webpack:///./app/mymessages/filters/messageBody.filter.js","webpack:///./app/mymessages/services/messagesListUI.service.js","webpack:///./app/mymessages/mymessages.states.js","webpack:///./app/prefs/prefs.component.js","webpack:///./app/prefs/prefs.states.js","webpack:///./app/util/ga.js","webpack:///./app/bootstrap/ngmodule.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","script","document","createElement","charset","timeout","nc","setAttribute","src","p","jsonpScriptSrc","error","Error","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","message","name","request","undefined","setTimeout","head","appendChild","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","_appConfig","_auth","_dataSources","_dialog","_dialog2","_loadingIndicator","_requiresAuth","_loadingIndicator2","GLOBAL_MODULE","angular","directive","dialog","service","AppConfig","AuthService","Contacts","Folders","Messages","DialogService","LoadingIndicatorService","run","authHookRunBlock","loadingIndicatorHookRunBlock","setProp","obj","val","pushToArr","array","item","guidChar","uniqReduce","arr","indexOf","flattenReduce","concat","Math","floor","random","toString","toUpperCase","guid","split","map","join","$document","$compile","$rootScope","_classCallCheck","this","body","find","elem","element","confirm","details","arguments","yesMsg","noMsg","extend","$new","append","finally","removeClass","remove","$inject","_app","_welcome","_login","_home","_app2","MAIN_MODULE","config","$uiRouter","trace","enable","urlService","rules","otherwise","state","$stateRegistry","stateRegistry","register","appState","homeState","loginState","welcomeState","contactsFutureState","prefsFutureState","mymessagesFutureState","component","app","welcome","login","home","AuthedController","$state","$transitions","emailAddress","isAuthenticated","logout","go","reload","isActive","glob","includes","controller","template","LoginController","_this","usernames","credentials","username","password","authenticating","authenticate","then","returnTo","params","options","_extends","catch","errorMessage","bindings","_contactDetail","_contactList","_contacts","_contactView","_editContact","_contacts2","CONTACTS_MODULE","contactView","contacts","editContact","contactDetail","contactList","contactsState","newContactState","viewContactState","editContactState","_compose","_folderList","_message","_messageList","_mymessages","_messageTable","_sortMessages","_messageBody","_messagesListUI","_mymessages2","MYMESSAGES_MODULE","sortMessages","compose","folderList","messageList","mymessages","messageTable","filter","messageBody","MessageListUI","composeState","messageState","messageListState","mymessagesState","_prefs","_prefs2","PREFS_MODULE","prefs","prefsState","sort","restDelay","load","fromJson","sessionStorage","getItem","save","setItem","toJson","$q","$timeout","authenticatedUser","_sessionStorage","$http","_possibleConstructorReturn","_SessionStorage","_SessionStorage2","_SessionStorage3","byFolder","folder","searchObject","_id","search","_util","SessionStorage","sessionStorageKey","sourceUrl","fromSession","_data","_idProp","_eqFn","JSON","parse","log","stripHashKey","resp","_commit","stringify","thenFn","_this2","exampleItem","items","example","keys","reduce","memo","inString","contains","id","_this3","put","post","_this4","eqFn","idx","findIndex","_this5","link","scope","addClass","yes","no","showLoadingIndicator","hideLoadingIndicator","spinner","getElementById","parentElement","removeChild","onBefore","to","requiresAuth","transition","injector","router","stateService","location","priority","onStart","onFinish","redirectTo","parent","url","$transition$","redirectedFrom","targetState","from","lazyLoad","$ocLazyLoad","mod","contact","EditContactController","$onInit","copy","pristineContact","uiCanExit","canExit","equals","first","last","deepStateRedirect","sticky","views","contactId","^.^.$default","ComposeController","pristineMessage","$stateParams","gotoPreviousState","hasPrevious","send","date","Date","read","folders","prefixSubject","prefix","subject","quoteMessage","makeResponseMsg","subjectPrefix","origMsg","MessageController","actions","action","reply","replyMsg","forward","fwdMsg","editDraft","nextMessageId","nextMessageGetter","nextState","messageId","messages","columns","messageTableController","colVisible","restrict","attrs","col","chevron","on","evt","$watch","newVal","toggleClass","$sce","msgText","trustAsHtml","$filter","proximalMessageId","sorted","msg","proximalIdx","default","folderId","messagelist","^.^.messagecontent","!$default.mymessages","PrefsController","reset","clear","savePrefs","a","_ngmodule","q","getElementsByTagName","async","parentNode","insertBefore","ga","ngmodule","$transitionsProvider","vpv","vpath","path","trans","formattedRoute","$to","format","pathname","x","onSuccess","onError","_stickyStates","_dsr","_main","_global","_angularjs2","_oclazyload2","$locationProvider","hashPrefix","plugin","StickyStatesPlugin","DSRPlugin","Visualizer"],"mappings":"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","file":"sampleapp.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + ({}[chunkId]||chunkId) + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"_bundles/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([17,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import {AppConfig} from \"./appConfig.service\";\nimport {AuthService} from \"./auth.service\";\nimport {Contacts, Folders, Messages} from \"./dataSources.service\";\nimport {dialog} from \"./dialog.directive\";\nimport {DialogService} from \"./dialog.service\";\nimport {LoadingIndicatorService} from \"./loadingIndicator.service\";\nimport {authHookRunBlock} from \"./requiresAuth.hook\";\nimport {loadingIndicatorHookRunBlock} from \"./loadingIndicator.hook\";\n\nexport const GLOBAL_MODULE = angular.module('global', []);\n\nGLOBAL_MODULE.directive('dialog', dialog);\n\nGLOBAL_MODULE.service('AppConfig', AppConfig);\nGLOBAL_MODULE.service('AuthService', AuthService);\nGLOBAL_MODULE.service('Contacts', Contacts);\nGLOBAL_MODULE.service('Folders', Folders);\nGLOBAL_MODULE.service('Messages', Messages);\nGLOBAL_MODULE.service('DialogService', DialogService);\nGLOBAL_MODULE.service('LoadingIndicatorService', LoadingIndicatorService);\n\nGLOBAL_MODULE.run(authHookRunBlock);\nGLOBAL_MODULE.run(loadingIndicatorHookRunBlock);\n","/** Some utility functions used by the application */\n\nexport const setProp = (obj, key, val) => { obj[key] = val; return obj; };\nexport const pushToArr = (array, item) => { array.push(item); return array; };\nexport const uniqReduce = (arr, item) => arr.indexOf(item) !== -1 ? arr : pushToArr(arr, item);\nexport const flattenReduce = (arr, item) => arr.concat(item);\nlet guidChar = (c) => c !== 'x' && c !== 'y' ? '-' : Math.floor(Math.random()*16).toString(16).toUpperCase();\nexport const guid = () => \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".split(\"\").map(guidChar).join(\"\");\n","import * as angular from \"angular\";\n\nexport class DialogService {\n  constructor($document, $compile, $rootScope) {\n    let body = $document.find(\"body\");\n    let elem = angular.element(\"<div class='dialog' dialog='opts'></div>\");\n\n    this.confirm = (message, details = \"Are you sure?\", yesMsg = \"Yes\", noMsg = \"No\") => {\n      $compile(elem)(angular.extend($rootScope.$new(), {message, details, yesMsg, noMsg}));\n      body.append(elem);\n      return elem.data(\"promise\").finally(() => elem.removeClass('active').remove());\n    }\n  }\n}\nDialogService.$inject = ['$document', '$compile', '$rootScope'];\n","import {app} from \"./app.component\";\nimport {welcome} from \"./welcome.component\";\nimport {login} from \"./login.component\";\nimport {home} from \"./home.component\";\nimport {appState, homeState, loginState, welcomeState, contactsFutureState, prefsFutureState, mymessagesFutureState} from \"./app.states\";\n\nexport const MAIN_MODULE = angular.module('main', []);\n\nMAIN_MODULE.config(['$uiRouterProvider', function($uiRouter) {\n  // Enable tracing of each TRANSITION... (check the javascript console)\n  // This syntax `$trace.enable(1)` is an alternative to `$trace.enable(\"TRANSITION\")`.\n  // Besides \"TRANSITION\", you can also enable tracing for : \"RESOLVE\", \"HOOK\", \"INVOKE\", \"UIVIEW\", \"VIEWCONFIG\"\n  $uiRouter.trace.enable(1);\n\n  // If the user enters a URL that doesn't match any known URL (state), send them to `/welcome`\n  const $urlService = $uiRouter.urlService;\n  $urlService.rules.otherwise({ state: 'welcome' });\n\n  const $stateRegistry = $uiRouter.stateRegistry;\n  $stateRegistry.register(appState);\n  $stateRegistry.register(homeState);\n  $stateRegistry.register(loginState);\n  $stateRegistry.register(welcomeState);\n\n  $stateRegistry.register(contactsFutureState);\n  $stateRegistry.register(prefsFutureState);\n  $stateRegistry.register(mymessagesFutureState);\n}]);\n\nMAIN_MODULE.component('app', app);\nMAIN_MODULE.component('welcome', welcome);\nMAIN_MODULE.component('login', login);\nMAIN_MODULE.component('home', home);\n","/**\n * The controller for the `app` component.\n */\nclass AuthedController {\n  constructor(AppConfig, AuthService, $state, $transitions, LoadingIndicatorService) {\n    this.AuthService = AuthService;\n    this.$state = $state;\n\n    this.emailAddress = AppConfig.emailAddress;\n    this.isAuthenticated = AuthService.isAuthenticated();\n }\n\n  logout() {\n    let {AuthService, $state} = this;\n    AuthService.logout();\n    // Reload states after authentication change\n    return $state.go('welcome', {}, { reload: true });\n  }\n\n  isActive(glob) {\n    return this.$state.includes(glob);\n  }\n}\nAuthedController.$inject = ['AppConfig', 'AuthService', '$state', '$transitions', 'LoadingIndicatorService'];\n\n/**\n * This is the main app component for an authenticated user.\n * \n * This component renders the outermost chrome (application header and tabs, the compose  and logout button)\n * It has a `ui-view` viewport for nested states to fill in.\n */\nexport const app = {\n  controller: AuthedController,\n  template: `\n    <div class=\"navheader\">\n      <ul ng-if=\"::$ctrl.isAuthenticated\" class=\"nav nav-tabs\">\n    \n        <li ui-sref-active=\"active\"> <a ui-sref=\"mymessages\" role=\"button\"> Messages </a> </li>\n        <li ui-sref-active=\"active\"> <a ui-sref=\"contacts\" role=\"button\"> Contacts </a> </li>\n        <li ui-sref-active=\"active\"> <a ui-sref=\"prefs\" role=\"button\"> Preferences </a> </li>\n    \n        <li class=\"navbar-right\">\n          <button class=\"btn btn-primary fa fa-home\" ui-sref=\"home\"></button>\n          <button style=\"margin-right: 15px;\" class=\"btn btn-primary\" ui-sref=\"mymessages.compose\"><i class=\"fa fa-envelope\"></i> New Message</button>\n        </li>\n    \n        <li class=\"navbar-text navbar-right logged-in-user\" style=\"margin: 0.5em 1.5em;\">\n          <div>\n            {{::$ctrl.emailAddress}} <i class=\"fa fa-chevron-down\"></i>\n            <div class=\"hoverdrop\">\n              <button class=\"btn btn-primary\" ng-click=\"$ctrl.logout()\">Log Out</button>\n            </div>\n          </div>\n        </li>\n    \n      </ul>\n    </div>\n    \n    <div ui-view></div>\n    <div ui-view=\"mymessages\" ng-show=\"$ctrl.isActive('mymessages.**')\"></div>\n    <div ui-view=\"contacts\" ng-show=\"$ctrl.isActive('contacts.**')\"></div>\n`\n}\n","export const welcome = {\n  template: `\n    <div class=\"container-fluid\">\n    \n      <h3>UI-Router Sample App</h3>\n    \n      <p>Welcome to the sample app!</p>\n      <p>This is a demonstration app intended to highlight some patterns that can be used within UI-Router.\n        These patterns should help you to to build cohesive, robust apps.  Additionally, this app uses state-vis\n        to show the tree of states, and a transition log visualizer.</p>\n    \n      <h4>App Overview</h4>\n      <p>\n        First, start exploring the application's functionality at a high level by activating\n        one of the three submodules: Messages, Contacts, or Preferences. If you are not already logged in,\n        you will be taken to an authentication screen (the authentication is fake; the password is \"password\")\n        <div>\n          <button class=\"btn btn-primary\" ui-sref=\"mymessages\"><i class=\"fa fa-envelope\"></i><span>Messages</span></button>\n          <button class=\"btn btn-primary\" ui-sref=\"contacts\"><i class=\"fa fa-users\"></i><span>Contacts</span></button>\n          <button class=\"btn btn-primary\" ui-sref=\"prefs\"><i class=\"fa fa-cogs\"></i><span>Preferences</span></button>\n        </div>\n      </p>\n    \n      <h4>Patterns and Recipes</h4>\n      <ul>\n        <li>Require Authentication</li>\n        <li>Previous State</li>\n        <li>Redirect Hook</li>\n        <li>Default Param Values</li>\n      </ul>\n    </div>`\n};\n","/**\n * The controller for the `login` component\n *\n * The `login` method validates the credentials.\n * Then it sends the user back to the `returnTo` state, which is provided as a resolve data.\n */\nclass LoginController {\n  constructor(AppConfig, AuthService, $state) {\n    this.usernames = AuthService.usernames;\n\n    this.credentials = {\n      username: AppConfig.emailAddress,\n      password: 'password'\n    };\n\n    this.login = (credentials) => {\n      this.authenticating = true;\n\n      const returnToOriginalState = () => {\n        let state = this.returnTo.state();\n        let params = this.returnTo.params();\n        let options = Object.assign({}, this.returnTo.options(), { reload: true });\n        $state.go(state, params, options);\n      };\n\n      const showError = (errorMessage) =>\n          this.errorMessage = errorMessage;\n\n      AuthService.authenticate(credentials.username, credentials.password)\n          .then(returnToOriginalState)\n          .catch(showError)\n          .finally(() => this.authenticating = false);\n    }\n  }\n}\nLoginController.$inject = ['AppConfig', 'AuthService', '$state'];\n\n/**\n * This component renders a faux authentication UI\n *\n * It prompts for the username/password (and gives hints with bouncy arrows)\n * It shows errors if the authentication failed for any reason.\n */\nexport const login = {\n  bindings: { returnTo: '<' },\n\n  controller: LoginController,\n\n  template:  `\n    <div class=\"container\">\n      <div class=\"col-md-6 col-md-offset-3 col-sm-8 col-sm-offset-2\">\n        <h3>Log In</h3>\n        <p>(This login screen is for demonstration only... just pick a username, enter 'password' and click <b>\"Log in\"</b>)</p>\n        <hr>\n    \n        <div>\n          <label for=\"username\">Username:</label>\n          <select class=\"form-control\" name=\"username\" id=\"username\"\n            ng-model=\"$ctrl.credentials.username\" ng-options=\"username for username in $ctrl.usernames\"></select>\n          <i style=\"position: relative; bottom: 1.8em; margin-left: 10em; height: 0\"\n              ng-hide=\"$ctrl.credentials.username\" class=\"fa fa-arrow-left bounce-horizontal\"> Choose </i>\n        </div>\n        <br>\n    \n        <div>\n          <label for=\"password\">Password:</label>\n          <input class=\"form-control\" type=\"password\" name=\"password\" ng-model=\"$ctrl.credentials.password\">\n          <i style=\"position: relative; bottom: 1.8em; margin-left: 5em; height: 0\"\n              ng-hide=\"!$ctrl.credentials.username || $ctrl.credentials.password == 'password'\" class=\"fa fa-arrow-left bounce-horizontal\">\n            Enter '<b>password</b>' here\n          </i>\n        </div>\n    \n        <div ng-show=\"$ctrl.errorMessage\" class=\"well error\">{{ $ctrl.errorMessage }}</div>\n    \n        <hr>\n        <div>\n          <button class=\"btn btn-primary\" type=\"button\"\n              ng-disabled=\"$ctrl.authenticating\" ng-click=\"$ctrl.login($ctrl.credentials)\">\n            <i class=\"fa fa-spin fa-spinner\" ng-show=\"$ctrl.authenticating\"></i> <span>Log in</span>\n          </button>\n          <i ng-show=\"$ctrl.credentials.username && $ctrl.credentials.password == 'password'\" style=\"position: relative;\" class=\"fa fa-arrow-left bounce-horizontal\"> Click Me!</i>\n      </div>\n    </div>\n    `\n};\n","// This is a home component for authenticated users.\n// It shows giant buttons which activate their respective submodules: Messages, Contacts, Preferences\nexport const home = {\n  template: `\n    <div class=\"home buttons\">\n      <button ui-sref=\"mymessages\" class=\"btn btn-primary\">\n        <h1><i class=\"fa fa-envelope\"></i></h1>\n        <h1>Messages</h1>\n      </button>\n\n      <button ui-sref=\"contacts\" class=\"btn btn-primary\">\n      <h1><i class=\"fa fa-users\"></i></h1>\n      <h1>Contacts</h1>\n      </button>\n\n      <button ui-sref=\"prefs\" class=\"btn btn-primary\">\n        <h1><i class=\"fa fa-cogs\"></i></h1>\n        <h1>Preferences</h1>\n      </button>\n    </div>\n`};\n","import {contactDetail} from \"./contactDetail.component\";\nimport {contactList} from \"./contactList.component\";\nimport {contacts} from \"./contacts.component\";\nimport {contactView} from \"./contactView.component\";\nimport {editContact} from \"./editContact.component\";\n\nimport {contactsState, editContactState, newContactState, viewContactState} from \"./contacts.states\";\n\nexport const CONTACTS_MODULE = angular.module('contacts', []);\n\nCONTACTS_MODULE.component('contactView', contactView);\nCONTACTS_MODULE.component('contacts', contacts);\nCONTACTS_MODULE.component('editContact', editContact);\nCONTACTS_MODULE.component('contactDetail', contactDetail);\nCONTACTS_MODULE.component('contactList', contactList);\n\nCONTACTS_MODULE.config(['$stateRegistryProvider', function($stateRegistry) {\n  $stateRegistry.register(contactsState);\n  $stateRegistry.register(newContactState);\n  $stateRegistry.register(viewContactState);\n  $stateRegistry.register(editContactState);\n}]);\n","import {compose} from \"./compose.component\";\nimport {folderList} from \"./directives/folderList.component\";\nimport {message} from \"./message.component\";\nimport {messageList} from \"./messageList.component\";\nimport {mymessages} from \"./mymessages.component\";\nimport {messageTable} from \"./directives/messageTable.component\";\nimport {sortMessages} from \"./directives/sortMessages.directive\";\nimport {messageBody} from \"./filters/messageBody.filter\";\nimport {MessageListUI} from \"./services/messagesListUI.service\";\n\nimport {composeState, messageState, messageListState, mymessagesState} from \"./mymessages.states\";\n\nexport const MYMESSAGES_MODULE = angular.module('mymessages', []);\n\nMYMESSAGES_MODULE.directive('sortMessages', sortMessages);\n\nMYMESSAGES_MODULE.component('compose', compose);\nMYMESSAGES_MODULE.component('folderList', folderList);\nMYMESSAGES_MODULE.component('message', message);\nMYMESSAGES_MODULE.component('messageList', messageList);\nMYMESSAGES_MODULE.component('mymessages', mymessages);\nMYMESSAGES_MODULE.component('messageTable', messageTable);\n\nMYMESSAGES_MODULE.filter('messageBody', messageBody);\n\nMYMESSAGES_MODULE.service('MessageListUI', MessageListUI);\n\nMYMESSAGES_MODULE.config(['$stateRegistryProvider', function($stateRegistry) {\n  $stateRegistry.register(composeState);\n  $stateRegistry.register(messageState);\n  $stateRegistry.register(messageListState);\n  $stateRegistry.register(mymessagesState);\n}]);\n","import {prefs} from \"./prefs.component\";\nimport {prefsState} from \"./prefs.states\";\n\nexport const PREFS_MODULE = angular.module('prefs', []);\n\nPREFS_MODULE.component('prefs', prefs);\n\nPREFS_MODULE.config(['$stateRegistryProvider', function ($stateRegistry) {\n  $stateRegistry.register(prefsState);\n}]);\n","/**\n * This file is the main entry point for the entire app.\n *\n * If the application is being bundled, this is where the bundling process\n * starts.  If the application is being loaded by an es6 module loader, this\n * is the entry point.\n *\n * Point Webpack or SystemJS to this file.\n *\n * This module imports all the different parts of the application which registers them with angular.\n * - Submodules\n *   - States\n *   - Components\n *   - Directives\n *   - Services\n *   - Filters\n *   - Run and Config blocks\n *     - Transition Hooks\n * - 3rd party Libraries and angular1 module\n */\n\n\n// import all the app sub modules\n// Each module registers it states/services/components, with the `ngmodule`\nimport \"../global/global.module\";\nimport \"../main/main.module\";\nimport \"../contacts/contacts.module\";\nimport \"../mymessages/mymessages.module\";\nimport \"../prefs/prefs.module\";\n\n// Google analytics\nimport '../util/ga';\n","/**\n * This service stores and retrieves user preferences in session storage\n */\nexport class AppConfig {\n  constructor() {\n    this.sort = '+date';\n    this.emailAddress = undefined;\n    this.restDelay = 100;\n    this.load();\n  }\n\n  load() {\n    try {\n      return angular.extend(this, angular.fromJson(sessionStorage.getItem(\"appConfig\")))\n    } catch (Error) { }\n\n    return this;\n  }\n\n  save() {\n    sessionStorage.setItem(\"appConfig\", angular.toJson(angular.extend({}, this)));\n  }\n}","/**\n * This service emulates an Authentication Service.\n */\nexport class AuthService {\n  constructor(AppConfig, $q, $timeout) {\n    this.AppConfig = AppConfig;\n    this.$q = $q;\n    this.$timeout = $timeout;\n    this.usernames = ['myself@angular.dev', 'devgal@angular.dev', 'devguy@angular.dev'];\n  }\n\n  /**\n   * Returns true if the user is currently authenticated, else false\n   */\n  isAuthenticated() {\n    return !!this.AppConfig.emailAddress;\n  }\n\n  /**\n   * Fake authentication function that returns a promise that is either resolved or rejected.\n   *\n   * Given a username and password, checks that the username matches one of the known\n   * usernames (this.usernames), and that the password matches 'password'.\n   *\n   * Delays 800ms to simulate an async REST API delay.\n   */\n  authenticate(username, password) {\n    let { $timeout, $q, AppConfig } = this;\n\n    // checks if the username is one of the known usernames, and the password is 'password'\n    const checkCredentials = () => $q((resolve, reject) => {\n      var validUsername = this.usernames.indexOf(username) !== -1;\n      var validPassword = password === 'password';\n\n      return (validUsername && validPassword) ? resolve(username) : reject(\"Invalid username or password\");\n    });\n\n    return $timeout(checkCredentials, 800)\n        .then((authenticatedUser) => {\n          AppConfig.emailAddress = authenticatedUser;\n          AppConfig.save()\n        });\n  }\n\n  /** Logs the current user out */\n  logout() {\n    this.AppConfig.emailAddress = undefined;\n    this.AppConfig.save();\n  }\n}\nAuthService.$inject = ['AppConfig', '$q', '$timeout'];\n","import {SessionStorage} from \"../util/sessionStorage\"\n\n/**\n * Fake REST Services (Contacts, Folders, Messages) used in the mymessages submodule.\n *\n * Each of these APIs have:\n *\n * .all()\n * .search(exampleItem)\n * .get(id)\n * .save(item)\n * .post(item)\n * .put(item)\n * .remove(item)\n *\n * See ../util/sessionStorage.js for more details, if curious\n */\n\n/** A fake Contacts REST client API */\nexport class Contacts extends SessionStorage {\n  constructor($http, $timeout, $q, AppConfig) {\n    // http://beta.json-generator.com/api/json/get/V1g6UwwGx\n    super($http, $timeout, $q, \"contacts\", \"data/contacts.json\", AppConfig);\n  }\n}\nContacts.$inject = ['$http', '$timeout', '$q', 'AppConfig'];\n\n/** A fake Folders REST client API */\nexport class Folders extends SessionStorage {\n  constructor($http, $timeout, $q, AppConfig) {\n    super($http, $timeout, $q, 'folders', 'data/folders.json', AppConfig);\n  }\n}\nFolders.$inject = ['$http', '$timeout', '$q', 'AppConfig'];\n\n/** A fake Messages REST client API */\nexport class Messages extends SessionStorage {\n  constructor($http, $timeout, $q, AppConfig) {\n    // http://beta.json-generator.com/api/json/get/VJl5GbIze\n    super($http, $timeout, $q, 'messages', 'data/messages.json', AppConfig);\n  }\n\n  byFolder(folder) {\n    let searchObject = { folder: folder._id };\n    let toFromAttr = [\"drafts\", \"sent\"].indexOf(folder._id) !== -1 ? \"from\" : \"to\";\n    searchObject[toFromAttr] = this.AppConfig.emailAddress;\n    return this.search(searchObject);\n  }\n}\nMessages.$inject = ['$http', '$timeout', '$q', 'AppConfig'];\n","import {pushToArr, guid, setProp} from \"./util\";\n\n/**\n * This class simulates a RESTful resource, but the API calls fetch data from\n * Session Storage instead of an HTTP call.\n *\n * Once configured, it loads the initial (pristine) data from the URL provided (using HTTP).\n * It exposes GET/PUT/POST/DELETE-like API that operates on the data.  All the data is also\n * stored in Session Storage.  If any data is modified in memory, session storage is updated.\n * If the browser is refreshed, the SessionStorage object will try to fetch the existing data from\n * the session, before falling back to re-fetching the initial data using HTTP.\n *\n * For an example, please see dataSources.js\n */\nexport class SessionStorage {\n  /**\n   * Creates a new SessionStorage object\n   *\n   * @param $http Pass in the $http service\n   * @param $timeout Pass in the $timeout service\n   * @param $q Pass in the $q service\n   * @param sessionStorageKey The session storage key. The data will be stored in browser's session storage under this key.\n   * @param sourceUrl The url that contains the initial data.\n   * @param AppConfig Pass in the AppConfig object\n   */\n  constructor($http, $timeout, $q, sessionStorageKey, sourceUrl, AppConfig) {\n    let data, fromSession = sessionStorage.getItem(sessionStorageKey);\n    // A promise for *all* of the data.\n    this._data = undefined;\n\n    // For each data object, the _idProp defines which property has that object's unique identifier\n    this._idProp = \"_id\";\n\n    // A basic triple-equals equality checker for two values\n    this._eqFn = (l, r) => l[this._idProp] === r[this._idProp];\n\n    // Services required to implement the fake REST API\n    this.$q = $q;\n    this.$timeout = $timeout;\n    this.sessionStorageKey = sessionStorageKey;\n    this.AppConfig = AppConfig; // Used to get the REST latency simulator,\n\n    if (fromSession) {\n      try {\n        // Try to parse the existing data from the Session Storage API\n        data = JSON.parse(fromSession);\n      } catch (e) {\n        console.log(\"Unable to parse session messages, retrieving intial data.\");\n      }\n    }\n\n    let stripHashKey = (obj) =>\n        setProp(obj, '$$hashKey', undefined);\n\n    // Create a promise for the data; Either the existing data from session storage, or the initial data via $http request\n    this._data = (data ? $q.resolve(data) : $http.get(sourceUrl).then(resp => resp.data))\n        .then(this._commit.bind(this))\n        .then(() => JSON.parse(sessionStorage.getItem(sessionStorageKey)))\n        .then(array => array.map(stripHashKey));\n\n  }\n\n  /** Saves all the data back to the session storage */\n  _commit(data) {\n    sessionStorage.setItem(this.sessionStorageKey, JSON.stringify(data));\n    return this.$q.resolve(data);\n  }\n\n  /** Helper which simulates a delay, then provides the `thenFn` with the data */\n  all(thenFn) {\n    return this.$timeout(() => this._data, this.AppConfig.restDelay).then(thenFn);\n  }\n\n  /** Given a sample item, returns a promise for all the data for items which have the same properties as the sample */\n  search(exampleItem) {\n    let contains = (search, inString) =>\n        (\"\" + inString).indexOf(\"\" + search) !== -1;\n    let matchesExample = (example, item) =>\n        Object.keys(example).reduce((memo, key) => memo && contains(example[key], item[key]), true);\n    return this.all(items =>\n        items.filter(matchesExample.bind(null, exampleItem)));\n  }\n\n  /** Returns a promise for the item with the given identifier */\n  get(id) {\n    return this.all(items =>\n        items.find(item => item[this._idProp] === id));\n  }\n\n  /** Returns a promise to save the item.  It delegates to put() or post() if the object has or does not have an identifier set */\n  save(item) {\n    return item[this._idProp] ? this.put(item) : this.post(item);\n  }\n\n  /** Returns a promise to save (POST) a new item.   The item's identifier is auto-assigned. */\n  post(item) {\n    item[this._idProp] = guid();\n    return this.all(items => pushToArr(items, item)).then(this._commit.bind(this));\n  }\n\n  /** Returns a promise to save (PUT) an existing item. */\n  put(item, eqFn = this._eqFn) {\n    return this.all(items => {\n      let idx = items.findIndex(eqFn.bind(null, item));\n      if (idx === -1) throw Error(`${item} not found in ${this}`);\n      items[idx] = item;\n      return this._commit(items).then(() => item);\n    });\n  }\n\n  /** Returns a promise to remove (DELETE) an item. */\n  remove(item, eqFn = this._eqFn) {\n    return this.all(items => {\n      let idx = items.findIndex(eqFn.bind(null, item));\n      if (idx === -1) throw Error(`${item} not found in ${this}`);\n      items.splice(idx, 1);\n      return this._commit(items).then(() => item);\n    });\n  }\n}\nSessionStorage.$inject = ['$http', '$timeout', '$q', 'sessionStorageKey', 'sourceUrl', 'AppConfig'];\n","dialog.$inject = ['$timeout', '$q'];\nexport function dialog($timeout, $q) {\n  return {\n    link: (scope, elem) => {\n      $timeout(() => elem.addClass('active'));\n      elem.data('promise', $q((resolve, reject) => {\n        scope.yes = () => resolve(true);\n        scope.no = () => reject(false);\n      }));\n    },\n    template: `\n      <div class=\"backdrop\"></div>\n      <div class='wrapper'>\n        <div class=\"content\">\n          <h4 ng-show=\"message\">{{message}}</h4>\n          <div ng-show=\"details\">{{details}}</div>\n    \n          <div style=\"padding-top: 1em;\">\n            <button class=\"btn btn-primary\" ng-click=\"yes()\">{{yesMsg}}</button>\n            <button class=\"btn btn-primary\" ng-click=\"no()\">{{noMsg}}</button>\n          </div>\n        </div>\n      </div>\n`\n  }\n}","import * as angular from \"angular\";\n\nexport class LoadingIndicatorService {\n  constructor($document) {\n    let body = $document.find(\"body\");\n\n    this.showLoadingIndicator = () => {\n      body.append(angular.element('<div id=\"spinner\"><i class=\"fa fa-spinner fa-pulse fa-3x fa-fw\" aria-hidden=\"true\"></i></div>'));\n    };\n\n    this.hideLoadingIndicator = () => {\n      let spinner = document.getElementById(\"spinner\");\n      spinner.parentElement.removeChild(spinner);\n    };\n  }\n}\nLoadingIndicatorService.$inject = ['$document', '$compile', '$rootScope'];\n","/**\n * This run block registers a Transition Hook which protects\n * routes that requires authentication.\n *\n * This hook redirects to /login when both:\n * - The user is not authenticated\n * - The user is navigating to a state that requires authentication\n */\nauthHookRunBlock.$inject = ['$transitions', 'AuthService'];\nexport function authHookRunBlock($transitions, AuthService) {\n  // Matches if the destination state's data property has a truthy 'requiresAuth' property\n  let requiresAuthCriteria = {\n    to: (state) => state.data && state.data.requiresAuth\n  };\n\n  // Function that returns a redirect for the current transition to the login state\n  // if the user is not currently authenticated (according to the AuthService)\n\n  let redirectToLogin = (transition) => {\n    let AuthService = transition.injector().get('AuthService');\n    let $state = transition.router.stateService;\n    if (!AuthService.isAuthenticated()) {\n      return $state.target('login', undefined, { location: false });\n    }\n  };\n\n  // Register the \"requires auth\" hook with the TransitionsService\n  $transitions.onBefore(requiresAuthCriteria, redirectToLogin, {priority: 10});\n}","/**\n * This run block registers a Transition Hook which shows a\n * Loading Indicator when a transition is in progress.\n */\nloadingIndicatorHookRunBlock.$inject = ['$transitions', 'LoadingIndicatorService'];\nexport function loadingIndicatorHookRunBlock($transitions, LoadingIndicatorService) {\n  $transitions.onStart( { /* match anything */ }, LoadingIndicatorService.showLoadingIndicator);\n  $transitions.onFinish( { /* match anything */ }, LoadingIndicatorService.hideLoadingIndicator);\n}\n","import {appTemplate, appController} from \"./app.component\";\nimport {welcomeTemplate, welcomeController} from \"./welcome.component\";\nimport {homeTemplate} from \"./home.component\";\nimport {loginTemplate, loginController} from \"./login.component\";\n\n/**\n * This is the parent state for the entire application.\n *\n * This state's primary purposes are:\n * 1) Shows the outermost chrome (including the navigation and logout for authenticated users)\n * 2) Provide a viewport (ui-view) for a substate to plug into\n */\nexport const appState = {\n  name: 'app',\n  redirectTo: 'welcome',\n  component: 'app'\n};\n\n/**\n * This is the 'welcome' state.  It is the default state (as defined by app.js) if no other state\n * can be matched to the URL.\n */\nexport const welcomeState = {\n  parent: 'app',\n  name: 'welcome',\n  url: '/welcome',\n  component: 'welcome'\n};\n\n\n/**\n * This is a home screen for authenticated users.\n *\n * It shows giant buttons which activate their respective submodules: Messages, Contacts, Preferences\n */\nexport const homeState = {\n  parent: 'app',\n  name: 'home',\n  url: '/home',\n  component: 'home'\n};\n\n\n/**\n * This is the login state.  It is activated when the user navigates to /login, or if a unauthenticated\n * user attempts to access a protected state (or substate) which requires authentication. (see routerhooks/requiresAuth.js)\n *\n * It shows a fake login dialog and prompts the user to authenticate.  Once the user authenticates, it then\n * reactivates the state that the user originally came from.\n */\nexport const loginState = {\n  parent: 'app',\n  name: 'login',\n  url: '/login',\n  component: 'login',\n  resolve: { returnTo: returnTo }\n};\n\n/**\n * A resolve function for 'login' state which figures out what state to return to, after a successful login.\n *\n * If the user was initially redirected to login state (due to the requiresAuth redirect), then return the toState/params\n * they were redirected from.  Otherwise, if they transitioned directly, return the fromState/params.  Otherwise\n * return the main \"home\" state.\n */\nreturnTo.$inject = ['$transition$'];\nfunction returnTo($transition$) {\n  if ($transition$.redirectedFrom() != null) {\n    // The user was redirected to the login state (e.g., via the requiresAuth hook when trying to activate contacts)\n    // Return to the original attempted target state (e.g., contacts)\n    return $transition$.redirectedFrom().targetState();\n  }\n\n  let $state = $transition$.router.stateService;\n\n  // The user was not redirected to the login state; they directly activated the login state somehow.\n  // Return them to the state they came from.\n  if ($transition$.from().name !== '') {\n    return $state.target($transition$.from(), $transition$.params(\"from\"));\n  }\n\n  // If the fromState's name is empty, then this was the initial transition. Just return them to the home state\n  return $state.target('home');\n}\n\n\n\n// Future State (Placeholder) for the contacts module\nexport const contactsFutureState = {\n  parent: 'app',\n  name: 'contacts.**',\n  url: '/contacts',\n  lazyLoad: function(transition) {\n    const $ocLazyLoad = transition.injector().get('$ocLazyLoad');\n    return import('../contacts/contacts.module').then(mod => $ocLazyLoad.load(mod.CONTACTS_MODULE))\n  }\n};\n\n// Future State (Placeholder) for the prefs module\nexport const prefsFutureState = {\n  parent: 'app',\n  name: 'prefs.**',\n  url: '/prefs',\n  lazyLoad: function(transition) {\n    const $ocLazyLoad = transition.injector().get('$ocLazyLoad');\n    return import('../prefs/prefs.module').then(mod => $ocLazyLoad.load(mod.PREFS_MODULE))\n  }\n};\n\n// Future State (Placeholder) for the mymessages module\nexport const mymessagesFutureState = {\n  parent: 'app',\n  name: 'mymessages.**',\n  url: '/mymessages',\n  lazyLoad: function(transition) {\n    const $ocLazyLoad = transition.injector().get('$ocLazyLoad');\n    return import('../mymessages/mymessages.module').then(mod => $ocLazyLoad.load(mod.MYMESSAGES_MODULE))\n  }\n};\n\n","/**\n * This component renders a read only view of the details for a single contact. \n */\nexport const contactDetail = {\n  bindings: { contact: '<' },\n\n  template: `\n    <div class=\"flex-h\">\n      <div class=\"details\">\n        <h3>{{$ctrl.contact.name.first}} {{$ctrl.contact.name.last}}</h3>\n        <div><label>Company</label><div>{{$ctrl.contact.company}}</div></div>\n        <div><label>Age</label><div>{{$ctrl.contact.age}}</div></div>\n        <div><label>Phone</label><div>{{$ctrl.contact.phone}}</div></div>\n        <div><label>Email</label><div>{{$ctrl.contact.email}}</div></div>\n        <div class=\"flex-h\">\n          <label>Address</label>\n          <div>{{$ctrl.contact.address.street}}<br>\n                {{$ctrl.contact.address.city}}, {{$ctrl.contact.address.state}} {{$ctrl.contact.address.zip}}\n          </div>\n        </div>\n      </div>\n  \n      <div class=\"flex nogrow\">\n        <img ng-src=\"{{$ctrl.contact.picture}}\"/>\n      </div>\n    </div>\n`\n};\n","/**\n * This component renders a list of contacts.\n * \n * At the top is a \"new contact\" button.\n * Each list item is a clickable link to the `contacts.contact` details substate\n */\nexport const contactList = {\n  bindings: { contacts: '<' },\n\n  template: `\n    <ul class=\"selectlist list-unstyled flex nogrow\">\n      <li>\n        <!-- This link is a relative ui-sref to the contacts.new state. -->\n        <a ui-sref=\".new\">\n          <button class=\"btn btn-primary\">\n            <i class=\"fa fa-pencil\"></i><span>New Contact</span>\n          </button>\n        </a>\n      </li>\n  \n      <li>&nbsp;</li>\n  \n      <!-- Highlight the selected contact:\n          When the current state matches the ui-sref's state (and its parameters)\n          ui-sref-active applies the 'selected' class to the a element -->\n      <li ng-repeat=\"contact in $ctrl.contacts\">\n        <a ui-sref=\".contact({contactId: contact._id})\" ui-sref-active=\"selected\">\n          {{contact.name.first}} {{contact.name.last}}\n        </a>\n      </li>\n    </ul>\n`\n};\n","/**\n * This component renders the contacts submodule.\n * \n * On the left is the list of contacts.\n * On the right is the ui-view viewport where contact details appear.\n */\nexport const contacts = {\n  bindings: { contacts: '<' },\n\n  template: `\n    <div class=\"my-contacts flex-h\">\n    \n      <contact-list contacts=\"$ctrl.contacts\" class=\"flex nogrow\"></contact-list>\n    \n      <div ui-view>\n        <!-- This default content is displayed when the ui-view is not filled in by a child state -->\n        <h4 style=\"margin: 1em 2em;\">Select a contact</h4>\n      </div>\n      \n    </div>`\n};\n","/**\n * This component renders details for a single contact\n * \n * A button messages the contact by linking to `mymessages.compose` state passing the email as a state parameter.\n * Another button edits the contact by linking to `contacts.contact.edit` state.\n */\n\nexport const contactView = {\n  bindings: {contact: '<'},\n\n  template: `\n    <div class=\"contact\">\n    \n      <contact-detail contact=\"$ctrl.contact\"></contact-detail>\n      \n      <!-- This button has an ui-sref to the mymessages.compose state. The ui-sref provides the mymessages.compose\n           state with an non-url parameter, which is used as the initial message model -->\n      <button class=\"btn btn-primary\" ui-sref=\"mymessages.compose({ message: { to: $ctrl.contact.email } })\">\n        <i class=\"fa fa-envelope\"></i><span>Message</span>\n      </button>\n    \n      <!-- This button has a relative ui-sref to the contacts.contact.edit state. -->\n      <button class=\"btn btn-primary\" ui-sref=\".edit\">\n        <i class=\"fa fa-pencil\"></i><span>Edit Contact</span>\n      </button>\n      \n    </div>\n`};\n","/**\n * The controller for the editContact component\n *\n * This component is used by both `contacts.contact.edit` and `contacts.new` states.\n *\n * The component makes a copy of the contqct data for editing.\n * The new copy and original (pristine) copy are used to determine if the contact is \"dirty\" or not.\n * If the user navigates to some other state while the contact is \"dirty\", the `uiCanExit` component\n * hook asks the user to confirm navigation away, losing any edits.\n *\n * The Delete Contact button is wired to the `remove` method, which:\n * - asks for confirmation from the user\n * - deletes the resource from REST API\n * - navigates back to the contacts grandparent state using relative addressing `^.^`\n *   the `reload: true` option re-fetches the contacts list from the server\n *\n * The Save Contact button is wired to the `save` method which:\n * - saves the REST resource (PUT or POST, depending)\n * - navigates back to the parent state using relative addressing `^`.\n *   when editing an existing contact, this returns to the `contacts.contact` \"view contact\" state\n *   when creating a new contact, this returns to the `contacts` list.\n *   the `reload: true` option re-fetches the contacts resolve data from the server\n */\nclass EditContactController {\n  constructor($state, DialogService, Contacts) {\n    this.$state = $state;\n    this.DialogService = DialogService;\n    this.Contacts = Contacts;\n  }\n\n  $onInit() {\n    // Make an editable copy of the pristineContact\n    this.contact = angular.copy(this.pristineContact);\n  }\n\n  uiCanExit() {\n    if (this.canExit || angular.equals(this.contact, this.pristineContact)) {\n      return true;\n    }\n\n    let message = 'You have unsaved changes to this contact.';\n    let question = 'Navigate away and lose changes?';\n    return this.DialogService.confirm(message, question);\n  }\n\n  /** Ask for confirmation, then delete the contact, then go to the grandparent state ('contacts') */\n  remove(contact) {\n    this.DialogService.confirm(`Delete contact: ${contact.name.first} ${contact.name.last}`)\n        .then(() => this.Contacts.remove(contact))\n        .then(() => this.canExit = true)\n        .then(() => this.$state.go(\"^.^\", null, { reload: true }));\n  }\n\n  /** Save the contact, then go to the grandparent state ('contacts') */\n  save(contact) {\n    this.Contacts.save(contact)\n        .then(() => this.canExit = true)\n        .then(() => this.$state.go(\"^\", null, { reload: true }));\n  }\n}\nEditContactController.$inject = ['$state', 'DialogService', 'Contacts'];\n\n/**\n * This component edits a single contact.\n *\n * Editable fields are bound to the contact.\n * A button cancels editing and returns to the contact view by linking to the parent state using `^` relative addressing.\n * Another button saves the contact.\n * A third button deletes the bcontact.\n */\nexport const editContact =  {\n  bindings: { pristineContact: '<' },\n\n  controller: EditContactController,\n\n  template: `\n    <div class=\"contact\">\n      <div class=\"details\">\n        <div><label>First</label>   <input type=\"text\" ng-model=\"$ctrl.contact.name.first\"></div>\n        <div><label>Last</label>    <input type=\"text\" ng-model=\"$ctrl.contact.name.last\"></div>\n        <div><label>Company</label> <input type=\"text\" ng-model=\"$ctrl.contact.company\"></div>\n        <div><label>Age</label>     <input type=\"text\" ng-model=\"$ctrl.contact.age\"></div>\n        <div><label>Phone</label>   <input type=\"text\" ng-model=\"$ctrl.contact.phone\"></div>\n        <div><label>Email</label>   <input type=\"text\" ng-model=\"$ctrl.contact.email\"></div>\n        <div><label>Street</label>  <input type=\"text\" ng-model=\"$ctrl.contact.address.street\"></div>\n        <div><label>City</label>    <input type=\"text\" ng-model=\"$ctrl.contact.address.city\"> </div>\n        <div><label>State</label>   <input type=\"text\" ng-model=\"$ctrl.contact.address.state\"></div>\n        <div><label>Zip</label>     <input type=\"text\" ng-model=\"$ctrl.contact.address.zip\"></div>\n        <div><label>Image</label>   <input type=\"text\" ng-model=\"$ctrl.contact.picture\"></div>\n      </div>\n    \n      <hr>\n    \n      <div>\n        <!-- This button's ui-sref relatively targets the parent state, i.e., contacts.contact -->\n        <button class=\"btn btn-primary\" ui-sref=\"^\"><i class=\"fa fa-close\"></i><span>Cancel</span></button>\n        <button class=\"btn btn-primary\" ng-click=\"$ctrl.save($ctrl.contact)\"><i class=\"fa fa-save\"></i><span>Save</span></button>\n        <button class=\"btn btn-primary\" ng-click=\"$ctrl.remove($ctrl.contact)\"><i class=\"fa fa-close\"></i><span>Delete</span></button>\n      </div>\n    </div>\n`};\n","import \"../global/dialog.service\";\n\n/**\n * This state displays the contact list.\n * It also provides a nested ui-view (viewport) for child states to fill in.\n *\n * The contacts are fetched using a resolve.\n */\nexport const contactsState = {\n  parent: 'app', // declares that 'contacts' is a child of 'app'\n  name: \"contacts\",\n  url: \"/contacts\",\n  resolve: {\n    // Resolve all the contacts.  The resolved contacts are injected into the controller.\n    contacts: ['Contacts', (Contacts) => Contacts.all()]\n  },\n  data: { requiresAuth: true },\n  deepStateRedirect: true,\n  sticky: true,\n  views: {\n    contacts: 'contacts'\n  },\n};\n\n/**\n * This state displays a single contact.\n * The contact to display is fetched using a resolve, based on the `contactId` parameter.\n */\nexport const viewContactState = {\n  name: 'contacts.contact',\n  url: '/:contactId',\n  resolve: {\n    // Resolve the contact, based on the contactId parameter value.\n    // The resolved contact is provided to the contactComponent's contact binding\n    contact: ['Contacts', '$transition$', (Contacts, $transition$) => Contacts.get($transition$.params().contactId)]\n  },\n  component: 'contactView'\n};\n\n\n/**\n * This state allows a user to edit a contact\n *\n * The contact data to edit is injected from the parent state's resolve.\n *\n * This state uses view targeting to replace the parent ui-view (which would normally be filled\n * by 'contacts.contact') with the edit contact template/controller\n */\nexport const editContactState = {\n  name: 'contacts.contact.edit',\n  url: '/edit',\n  views: {\n    // Relatively target the grand-parent-state's $default (unnamed) ui-view\n    // This could also have been written using ui-view@state addressing: $default@contacts\n    // Or, this could also have been written using absolute ui-view addressing: !$default.$default.$default\n    '^.^.$default': {\n      bindings: { pristineContact: \"contact\" },\n      component: 'editContact'\n    }\n  }\n};\n\n/**\n * This state allows a user to create a new contact\n *\n * The contact data to edit is injected into the component from the parent state's resolve.\n */\nexport const newContactState = {\n  name: 'contacts.new',\n  url: '/new',\n  component: 'editContact'\n};\n","/**\n * The controller for the Compose component\n */\nclass ComposeController {\n  constructor($state, DialogService, AppConfig, Messages) {\n    this.$state = $state;\n    this.DialogService = DialogService;\n    this.AppConfig = AppConfig;\n    this.Messages = Messages;\n  }\n\n  /**\n   * Create our message's model using the current user's email address as 'message.from'\n   * Then extend it with all the properties from (non-url) state parameter 'message'.\n   * Keep two copies: the editable one and the original one.\n   * These copies are used to check if the message is dirty.\n   */\n  $onInit() {\n    this.pristineMessage = angular.extend({from: this.AppConfig.emailAddress}, this.$stateParams.message);\n    this.message = angular.copy(this.pristineMessage);\n  }\n\n  /**\n   * Checks if the edited copy and the pristine copy are identical when the state is changing.\n   * If they are not identical, the allows the user to confirm navigating away without saving.\n   */\n  uiCanExit() {\n    if (this.canExit || angular.equals(this.pristineMessage, this.message)) {\n        return true;\n    }\n\n    var message = 'You have not saved this message.';\n    var question = 'Navigate away and lose changes?';\n    return this.DialogService.confirm(message, question, \"Yes\", \"No\");\n  }\n\n  /**\n   * Navigates back to the previous state.\n   *\n   * - Checks the $transition$ which activated this controller for a 'from state' that isn't the implicit root state.\n   * - If there is no previous state (because the user deep-linked in, etc), then go to 'mymessages.messagelist'\n   */\n  gotoPreviousState() {\n    let $transition$ = this.$transition$;\n    let hasPrevious = !!$transition$.from().name;\n    let state = hasPrevious ? $transition$.from() : \"mymessages.messagelist\";\n    let params = hasPrevious ? $transition$.params(\"from\") : {};\n    this.$state.go(state, params);\n  };\n\n  /** \"Send\" the message (save to the 'sent' folder), and then go to the previous state */\n  send(message) {\n    this.Messages.save(angular.extend(message, {date: new Date(), read: true, folder: 'sent'}))\n        .then(() => this.canExit = true)\n        .then(() => this.gotoPreviousState());\n  };\n\n  /** Save the message to the 'drafts' folder, and then go to the previous state */\n  save(message) {\n    this.Messages.save(angular.extend(message, {date: new Date(), read: true, folder: 'drafts'}))\n        .then(() => this.canExit = true)\n        .then(() => this.gotoPreviousState());\n  }\n}\nComposeController.$inject = ['$state', 'DialogService', 'AppConfig', 'Messages'];\n\n/**\n * This component composes a message\n *\n * The message might be new, a saved draft, or a reply/forward.\n * A Cancel button discards the new message and returns to the previous state.\n * A Save As Draft button saves the message to the \"drafts\" folder.\n * A Send button sends the message\n */\nexport const compose = {\n  bindings: { $stateParams: '<', $transition$: '<' },\n\n  controller: ComposeController,\n\n  template: `\n    <div class=\"compose\">\n      <div class=\"header\">\n        <div class=\"flex-h\"> <label>Recipient</label> <input type=\"text\" id=\"to\" name=\"to\" ng-model=\"$ctrl.message.to\"> </div>\n        <div class=\"flex-h\"> <label>Subject</label> <input type=\"text\" id=\"subject\" name=\"subject\" ng-model=\"$ctrl.message.subject\"> </div>\n      </div>\n    \n      <div class=\"body\">\n        <textarea name=\"body\" id=\"body\" ng-model=\"$ctrl.message.body\" cols=\"30\" rows=\"20\"></textarea>\n        \n        <div class=\"buttons\">\n          <!-- Clicking this button brings the user back to the state they came from (previous state) -->\n          <button class=\"btn btn-primary\" ng-click=\"$ctrl.gotoPreviousState()\"><i class=\"fa fa-times-circle-o\"></i><span>Cancel</span></button>\n          <button class=\"btn btn-primary\" ng-click=\"$ctrl.save($ctrl.message)\"><i class=\"fa fa-save\"></i><span>Save as Draft</span></button>\n          <button class=\"btn btn-primary\" ng-click=\"$ctrl.send($ctrl.message)\"><i class=\"fa fa-paper-plane-o\"></i><span>Send</span></button>\n        </div>\n      </div>\n    </div>\n`\n};","/**\n * Renders a list of folders\n */\nexport const folderList = {\n  bindings: {folders: '<'},\n\n  template: `\n    <!-- Renders a list of folders -->\n    <div class=\"folderlist\">\n      <ul class=\"selectlist list-unstyled\">\n  \n        <!-- Highlight the selected folder:\n            When the current state matches the ui-sref's state (and its parameters)\n            ui-sref-active applies the 'selected' class to the li element -->\n        <li class=\"folder\" ui-sref-active=\"selected\" ng-repeat=\"folder in $ctrl.folders\" >\n          <!-- This ui-sref is a relative link to the 'mymessages.messagelist' substate. It provides the\n              'folderId' parameter value from the current folder's .id property -->\n          <a ui-sref=\".messagelist({folderId: folder._id})\"><i class=\"fa\"></i>{{folder._id}}</a>\n        </li>\n      </ul>\n    </div>\n`};\n","import {setProp} from \"../util/util\";\n\n/** Helper function to prefix a message with \"fwd: \" or \"re: \" */\nconst prefixSubject = (prefix, message) => prefix + message.subject;\n/** Helper function which quotes an email message */\nconst quoteMessage = (message) => `\n\n\n\n---------------------------------------\nOriginal message:\nFrom: ${message.from}\nDate: ${message.date}\nSubject: ${message.subject}\n\n${message.body}`;\n\n/** Helper function to make a response message object */\nconst makeResponseMsg = (subjectPrefix, origMsg) => ({\n  from: origMsg.to,\n  to: origMsg.from,\n  subject: prefixSubject(subjectPrefix, origMsg),\n  body: quoteMessage(origMsg)\n});\n\n\n/**\n * The controller for the Message component\n */\nclass MessageController {\n  constructor($state, DialogService, Messages) {\n    this.$state = $state;\n    this.DialogService = DialogService;\n    this.Messages = Messages;\n  }\n\n  /**\n   * When the user views a message, mark it as read and save (PUT) the resource.\n   *\n   * Apply the available actions for the message, depending on the folder the message belongs to.\n   */\n  $onInit() {\n    this.message.read = true;\n    this.Messages.put(this.message);\n\n    this.actions = this.folder.actions.reduce((obj, action) => setProp(obj, action, true), {});\n  }\n\n  /**\n   * Compose a new message as a reply to this one\n   */\n  reply(message) {\n    let replyMsg = makeResponseMsg(\"Re: \", message);\n    this.$state.go('mymessages.compose', { message: replyMsg });\n  };\n\n  /**\n   * Compose a new message as a forward of this one.\n   */\n  forward(message) {\n    let fwdMsg = makeResponseMsg(\"Fwd: \", message);\n    delete fwdMsg.to;\n    this.$state.go('mymessages.compose', { message: fwdMsg });\n  };\n\n  /**\n   * Continue composing this (draft) message\n   */\n  editDraft(message) {\n    this.$state.go('mymessages.compose', { message: message });\n  };\n\n  /**\n   * Delete this message.\n   *\n   * - confirm deletion\n   * - delete the message\n   * - determine which message should be active\n   * - show that message\n   */\n  remove(message) {\n    let nextMessageId = this.nextMessageGetter(message._id);\n    let nextState = nextMessageId ? 'mymessages.messagelist.message' : 'mymessages.messagelist';\n    let params = { messageId: nextMessageId };\n\n    this.DialogService.confirm(\"Delete?\", undefined)\n        .then(() => this.Messages.remove(message))\n        .then(() => this.$state.go(nextState, params, { reload: 'mymessages.messagelist' }));\n  };\n}\nMessageController.$inject = ['$state', 'DialogService', 'Messages'];\n\n/**\n * This component renders a single message\n *\n * Buttons perform actions related to the message.\n * Buttons are shown/hidden based on the folder's context.\n * For instance, a \"draft\" message can be edited, but can't be replied to.\n */\nexport const message = {\n  bindings: { folder: '<', message: '<', nextMessageGetter: '<' },\n\n  controller: MessageController,\n\n  template: `\n    <div class=\"message\">\n    \n      <div class=\"header\">\n        <div>\n          <h4>{{$ctrl.message.subject}}</h4>\n          <h5>{{$ctrl.message.from}} <i class=\"fa fa-long-arrow-right\"></i> {{$ctrl.message.to}}</h5>\n        </div>\n    \n        <div class=\"line2\">\n          <div>{{$ctrl.message.date | date: 'longDate'}} {{$ctrl.message.date | date: 'mediumTime'}}</div>\n          <div>\n            <button class=\"btn btn-primary\" ng-show=\"$ctrl.actions.edit\" ng-click=\"$ctrl.editDraft($ctrl.message)\"><i class=\"fa fa-pencil\"></i> <span>Edit Draft</span></button>\n            <button class=\"btn btn-primary\" ng-show=\"$ctrl.actions.reply\" ng-click=\"$ctrl.reply($ctrl.message)\"><i class=\"fa fa-reply\"></i> <span>Reply</span></button>\n            <button class=\"btn btn-primary\" ng-show=\"$ctrl.actions.forward\" ng-click=\"$ctrl.forward($ctrl.message)\"><i class=\"fa fa-forward\" ></i> <span>Forward</span></button>\n            <button class=\"btn btn-primary\" ng-show=\"$ctrl.actions.delete\" ng-click=\"$ctrl.remove($ctrl.message)\"><i class=\"fa fa-close\"></i> <span>Delete</span></button>\n          </div>\n        </div>\n      </div>\n    \n      <!-- Pass the raw (plain text) message body through the messageBody filter to format slightly nicer. -->\n      <div class=\"body\" ng-bind-html=\"::$ctrl.message.body | messageBody\"></div>\n    </div>\n`};\n","/**\n * This component renders a list of messages using the `messageTable` component\n */\nexport const messageList = {\n  bindings: { folder: '<', messages: '<' },\n  template: `\n    <div class=\"messages\">\n      <message-table columns=\"$ctrl.folder.columns\" messages=\"$ctrl.messages\"></message-table>\n    </div>\n`};","/**\n * The main mymessages component.\n *\n * Renders a list of folders, and has two viewports:\n * - messageList: filled with the list of messages for a folder\n * - messagecontent: filled with the contents of a single message.\n */\nexport const mymessages = {\n  bindings: {folders: '<'},\n\n  template: `\n    <div class=\"my-messages\">\n    \n      <!-- Show message folders -->\n      <folder-list folders=\"$ctrl.folders\"></folder-list>\n    \n      <!-- A named view for the list of messages in this folder.  This will be  filled in by the 'mymessages.messagelist' child state -->\n      <div ui-view=\"messagelist\" class=\"messagelist\"> </div>\n    \n    </div>\n    \n    <!-- A named ui-view for a message's contents.  The 'mymessages.messagelist.message' grandchild state plugs into this ui-view -->\n    <div ui-view=\"messagecontent\"></div>\n`};\n","/**\n * A component that displays a folder of messages as a table\n * \n * If a row is clicked, the details of the message is shown using a relative ui-sref to `.message`.\n * \n * ui-sref-active is used to highlight the selected row.\n * \n * Shows/hides specific columns based on the `columns` input binding.\n */\nexport const messageTable = {\n  bindings: { columns: '<', messages: '<' },\n\n  controller: messageTableController,\n\n  template: `\n    <table>\n      <thead>\n        <tr>\n          <td ng-if=\"::$ctrl.colVisible('read')\"></td>\n          <td ng-if=\"::$ctrl.colVisible('from')\"     sort-messages=\"from\">Sender</td>\n          <td ng-if=\"::$ctrl.colVisible('to')\"       sort-messages=\"to\">Recipient</td>\n          <td ng-if=\"::$ctrl.colVisible('subject')\"  sort-messages=\"subject\">Subject</td>\n          <td ng-if=\"::$ctrl.colVisible('date')\"     sort-messages=\"date\">Date</td>\n        </tr>\n      </thead>\n  \n      <tbody>\n        <tr ng-repeat=\"message in $ctrl.messages | orderBy: $ctrl.AppConfig.sort track by message._id\"\n            ui-sref=\".message({messageId: message._id})\" ui-sref-active=\"active\">\n          <td ng-if=\"::$ctrl.colVisible('read')\"><i class=\"fa fa-circle\" style=\"font-size: 50%\" ng-show=\"!message.read\"></td>\n          <td ng-if=\"::$ctrl.colVisible('from')\">{{ message.from }}</td>\n          <td ng-if=\"::$ctrl.colVisible('to')\">{{ message.to }}</td>\n          <td ng-if=\"::$ctrl.colVisible('subject')\">{{ message.subject }}</td>\n          <td ng-if=\"::$ctrl.colVisible('date')\">{{ message.date | date: \"yyyy-MM-dd\" }}</td>\n        </tr>\n      </tbody>\n  \n    </table>\n`};\n\nmessageTableController.$inject = ['AppConfig'];\nfunction messageTableController(AppConfig) {\n  this.AppConfig = AppConfig;\n  this.colVisible = (name) => this.columns.indexOf(name) !== -1;\n}","/**\n * A directive (for a table header) which changes the app's sort order\n */\nsortMessages.$inject = ['AppConfig'];\nexport function sortMessages(AppConfig) {\n  return {\n    restrict: 'A',\n    link: function(scope, elem, attrs) {\n      let col = attrs.sortMessages;\n      if (!col) return;\n      let chevron = angular.element(\"<i style='padding-left: 0.25em' class='fa'></i>\");\n      elem.append(chevron);\n\n      elem.on(\"click\", (evt) => AppConfig.sort = (AppConfig.sort === `+${col}`) ? `-${col}` : `+${col}`);\n      scope.$watch(() => AppConfig.sort, (newVal) => {\n        chevron.toggleClass(\"fa-sort-asc\", newVal == `+${col}`);\n        chevron.toggleClass(\"fa-sort-desc\", newVal == `-${col}`);\n      });\n    }\n  }\n}\n","/** Angular filter to format fake emails as HTML*/\nmessageBody.$inject = ['$sce'];\nexport function messageBody($sce) {\n  return (msgText = '') => $sce.trustAsHtml(msgText.split(/\\n/).map(p => `<p>${p}</p>`).join('\\n'));\n}","/** Provides services related to a message list */\nexport class MessageListUI {\n  constructor($filter, AppConfig) {\n    this.$filter = $filter;\n    this.AppConfig = AppConfig;\n  }\n\n  /** This is a UI helper which finds the nearest messageId in the messages list to the messageId parameter */\n  proximalMessageId(messages, messageId) {\n    let sorted = this.$filter(\"orderBy\")(messages, this.AppConfig.sort);\n    let idx = sorted.findIndex(msg => msg._id === messageId);\n    var proximalIdx = sorted.length > idx + 1 ? idx + 1 : idx - 1;\n    return proximalIdx >= 0 ? sorted[proximalIdx]._id : undefined;\n  }\n}\nMessageListUI.$inject = ['$filter', 'AppConfig'];\n","/**\n * The mymessages state. This is the main state for the mymessages submodule.\n *\n * This state shows the list of folders for the current user. It retrieves the folders from the\n * Folders service.  If a user navigates directly to this state, the state redirects to the 'mymessages.messagelist'.\n */\nexport const mymessagesState = {\n  parent: 'app',\n  name: \"mymessages\",\n  url: \"/mymessages\",\n  resolve: {\n    // All the folders are fetched from the Folders service\n    folders: ['Folders', (Folders) => Folders.all()]\n  },\n  views: {\n    mymessages: 'mymessages'\n  },\n  // Mark this state as requiring authentication.  See ../routerhooks/requiresAuth.js.\n  data: { requiresAuth: true },\n  // If mymessages state is directly activated, redirect the transition to the most recent\n  // child state that was previously activated, or 'mymessages.messagelist' (by default)\n  deepStateRedirect: {\n    default: { state: 'mymessages.messagelist' }\n  },\n  sticky: true,\n};\n\n\n/**\n * This state shows the contents (a message list) of a single folder\n */\nexport const messageListState = {\n  name: 'mymessages.messagelist',\n  url: '/:folderId',\n  // The folderId parameter is part of the URL.  This params block sets 'inbox' as the default value.\n  // If no parameter value for folderId is provided on the transition, then it will be defaulted to 'inbox'\n  params: {folderId: \"inbox\"},\n  resolve: {\n    // Fetch the current folder from the Folders service, using the folderId parameter\n    folder: ['Folders', '$stateParams', (Folders, $stateParams) => Folders.get($stateParams.folderId)],\n\n    // The resolved folder object (from the resolve above) is injected into this resolve\n    // The list of message for the folder are fetched from the Messages service\n    messages: ['Messages', 'folder', (Messages, folder) => Messages.byFolder(folder)]\n  },\n  views: {\n    // This targets the \"messagelist\" named ui-view added to the DOM in the parent state 'mymessages'\n    messagelist: 'messageList'\n  }\n};\n\n\n/**\n * This state shows the contents of a single message.\n * It also has UI to reply, forward, delete, or edit an existing draft.\n */\nexport const messageState = {\n  name: 'mymessages.messagelist.message',\n  url: '/:messageId',\n  resolve: {\n    // Fetch the message from the Messages service using the messageId parameter\n    message: ['Messages', '$stateParams', (Messages, $stateParams) => Messages.get($stateParams.messageId)],\n    // Provide the component with a function it can query that returns the closest message id\n    nextMessageGetter: ['MessageListUI', 'messages', (MessageListUI, messages) => MessageListUI.proximalMessageId.bind(MessageListUI, messages)]\n  },\n  views: {\n    // Relatively target the parent-state's parent-state's 'messagecontent' ui-view\n    // This could also have been written using ui-view@state addressing: 'messagecontent@mymessages'\n    // Or, this could also have been written using absolute ui-view addressing: '!$default.mymessages.messagecontent'\n    \"^.^.messagecontent\": 'message'\n  }\n};\n\n\n/**\n * This state allows the user to compose a new message, edit a drafted message, send a message,\n * or save an unsent message as a draft.\n *\n * This state uses view-targeting to take over the ui-view that would normally be filled by the 'mymessages' state.\n */\nexport const composeState = {\n  name: 'mymessages.compose',\n  url: '/compose',\n  // Declares that this state has a 'message' parameter, that defaults to an empty object.\n  // Note the parameter does not appear in the URL.\n  params: {\n    message: {}\n  },\n  views: {\n    // Absolutely targets the ui-view named 'mymessages' (which is nested inside an unnamed ui-view) with the 'compose' component.\n    // Absolute targeting finds the nested ui-view in the DOM, using view names.\n    '!$default.mymessages': 'compose'\n  }\n};\n","/**\n * The controller for the prefs component.\n */\nclass PrefsController {\n  constructor(AppConfig) {\n    this.AppConfig = AppConfig\n  }\n\n  $onInit() {\n    this.prefs = {\n      restDelay: this.AppConfig.restDelay\n    }\n  }\n\n  /** Clear out the session storage */\n  reset() {\n    sessionStorage.clear();\n    document.location.reload(true);\n  }\n\n  /** After saving preferences to session storage, reload the entire application */\n  savePrefs() {\n    angular.extend(this.AppConfig, { restDelay: this.prefs.restDelay }).save();\n    document.location.reload(true);\n  }\n}\nPrefsController.$inject = ['AppConfig'];\n\n/**\n * A component which shows and updates app preferences\n */\nexport const prefs = {\n  controller: PrefsController,\n\n  template: `\n    <div>\n      <button class=\"btn btn-primary\" ng-click=\"$ctrl.reset()\"><i class=\"fa fa-recycle\"></i> <span>Reset All Data</span></button>\n    </div>\n    \n    <div>\n      <label for=\"restDelay\">Simulated REST API delay (ms)</label>\n      <input type=\"text\" name=\"restDelay\" ng-model=\"$ctrl.prefs.restDelay\">\n      <button class=\"btn btn-primary\" ng-click=\"$ctrl.savePrefs()\">Save</button>\n    </div>\n`};","/**\n * This state allows the user to set their application preferences\n */\nexport const prefsState = {\n  parent: 'app',\n  name: 'prefs',\n  url: '/prefs',\n  component: 'prefs',\n  // Mark this state as requiring authentication.  See ../global/requiresAuth.hook.js.\n  data: { requiresAuth: true }\n};\n","import {ngmodule} from \"../bootstrap/ngmodule\";\n\n/** Google analytics */\n\n(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n})(window,document,'script','//www.google-analytics.com/analytics.js','ga');\n\nga('create', 'UA-73329341-1', 'auto');\nga('send', 'pageview');\n\n\nngmodule.config(['$transitionsProvider', $transitionsProvider => {\n  const vpv = (vpath) =>\n      window['ga']('send', 'pageview', vpath);\n\n  const path = (trans) => {\n    const formattedRoute = trans.$to().url.format(trans.params());\n    const withSitePrefix = location.pathname + formattedRoute;\n    return `/${withSitePrefix.split('/').filter(x => x).join('/')}`;\n  };\n\n  const error = (trans) => {\n    const err = trans.error();\n    const type = err && err.hasOwnProperty('type') ? err.type : '_';\n    const message = err && err.hasOwnProperty('message') ? err.message : '_';\n    vpv(path(trans) + ';errorType=' + type + ';errorMessage=' + message);\n  };\n\n  $transitionsProvider.onSuccess({}, (trans) => vpv(path(trans)), { priority: -10000 });\n  $transitionsProvider.onError({}, (trans) => error(trans), { priority: -10000 });\n}]);\n","/**\n * This file imports the third party library dependencies, then creates the angular module \"demo\"\n * and exports it.\n */\n// External dependencies\nimport * as angular from \"angular\";\nimport uiRouter from \"@uirouter/angularjs\";\nimport { StickyStatesPlugin } from '@uirouter/sticky-states';\nimport { DSRPlugin } from '@uirouter/dsr';\nimport ocLazyLoad from \"oclazyload\";\n\nimport { MAIN_MODULE } from '../main/main.module';\nimport { GLOBAL_MODULE } from '../global/global.module';\n\n// Create the angular module \"demo\".\n//\n// Since it is exported, other parts of the application (in other files) can then import it and register things.\n// In bootstrap.js, the module is imported, and the components, services, and states are registered.\nexport const ngmodule = angular.module(\"demo\", [\n  uiRouter,\n  ocLazyLoad,\n  MAIN_MODULE.name,\n  GLOBAL_MODULE.name,\n\n  // These modules are lazy loaded via future states in app.states.js\n  // CONTACTS_MODULE.name\n  // MYMESSAGES_MODULE.name\n  // PREFS_MODULE.name\n]);\n\nngmodule.config(['$uiRouterProvider', '$locationProvider', ($uiRouter, $locationProvider) => {\n  $locationProvider.hashPrefix('');\n  $uiRouter.plugin(StickyStatesPlugin);\n  $uiRouter.plugin(DSRPlugin);\n  // Show the UI-Router Visualizer\n  import(\"@uirouter/visualizer\").then(module => $uiRouter.plugin(module.Visualizer));\n}]);\n"],"sourceRoot":""}